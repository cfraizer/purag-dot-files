#!/bin/bash

# copy the contents of file $1 to X clipboard
fcopy () {
  [ ! -f "$1" ] \
    && echo "$(tput setaf 1)$1 is not a valid file" \
    && return 1
  xclip -sel clip < "$1"
  echo "$(tput setaf 2)copied contents of $1 to clipboard"
}

# run a task and notify me of its status on completion
notify () {
  [[ -z "${@// }" ]] \
    && echo "$(tput setaf 1)no command specified" \
    && return 1
  "$@" \
    && pb push -d 1 <<< ""$@": succeeded!" \
    || pb push -d 1 <<< ""$@": failed :("
}

# TODO add pushbullet SMS function

# Add an alias for a remote host and generate + copy an SSH key
addhost () {
  echo -n "Enter host alias: " && read host
  while [ -z "$host" ]; do
    echo "$(tput setaf 1)Host alias required.$(tput sgr 0)" \
      && echo -n "Enter host alias: " && read host
  done

  echo -n "Enter hostname: " && read hostname
  while [ -z "$hostname" ]; do
    echo "$(tput setaf 1)Hostname required.$(tput sgr 0)" \
      && echo -n "Enter hostname: " && read hostname
  done

  echo -n "Enter username: " && read user
  while [ -z "$user" ]; do
    echo "$(tput setaf 1)Username required.$(tput sgr 0)" \
      && echo -n "Enter username: " && read user
  done

  echo -n "Enter port (enter to ignore): " && read port

  echo -n "Enter SSH key filename (~/.ssh/${host}_id_rsa): " && read keyfile
  keyfile=${keyfile:-~/.ssh/${host}_id_rsa}

  ssh-keygen -t rsa -f "$keyfile"

  echo "$(tput setaf 2)Copying SSH key to remote host...$(tput sgr 0)"
  ssh-copy-id -i "$keyfile" $user@$host
  echo "$(tput setaf 2)Done"

  echo "$(tput setaf 2)Adding host configuration to ~/.ssh/config...$(tput sgr 0)"
  echo "Host $host" >> ~/.ssh/config
  echo "  Hostname $hostname" >> ~/.ssh/config
  echo "  User $user" >> ~/.ssh/config
  [ -z "$port" ] && echo "  Port $port" >> ~/.ssh/config
  echo "  IdentityFile $keyfile" >> ~/.ssh/config
  echo "  PreferredAuthentications publickey" >> ~/.ssh/config
  echo "  ForwardAgent yes" >> ~/.ssh/config
  echo "$(tput setaf 2)Done$(tput sgr 0)"
}

# TODO: remove a host config from ~/.ssh/config
#   also remove whatever its identityfile is, or move it to
#   ~/.ssh/.archive or something
rmhost () {
  [ -z "$1" ] \
    && echo "$(tput setaf 1)Need host alias to remove" \
    && return 1
  ! grep -q "Host $1" ~/.ssh/config \
    && echo "$(tput setaf 1)Host alias not found" \
    && return 1
}

# TODO: if I archive in rmhost, make archived configs restorable
